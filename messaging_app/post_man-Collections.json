{
  "info": {
    "name": "Messaging App API Tests",
    "_postman_id": "c8e2a7f2-1b2e-4e9f-9a45-7f3b9c6e2f1a",
    "description": "Tests for Messaging App API endpoints including authentication, conversations, and messages",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authenticate User (Get JWT Token)",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response contains access token', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.access).to.exist;",
              "    pm.collectionVariables.set('access_token', jsonData.access);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"username\": \"testuser\", \"password\": \"testpassword\"}"
        },
        "url": {
          "raw": "{{base_url}}/api/token/",
          "host": ["{{base_url}}"],
          "path": ["api", "token", ""]
        }
      },
      "response": []
    },
    {
      "name": "Create Conversation",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test('Response contains conversation ID', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.id).to.exist;",
              "    pm.collectionVariables.set('conversation_id', jsonData.id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"participants\": [1, 2]}"
        },
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", ""]
        }
      },
      "response": []
    },
    {
      "name": "Send Message",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 201', function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test('Response contains message content', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.content).to.equal('Hello, this is a test message!');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"conversation\": {{conversation_id}}, \"content\": \"Hello, this is a test message!\"}"
        },
        "url": {
          "raw": "{{base_url}}/api/messages/",
          "host": ["{{base_url}}"],
          "path": ["api", "messages", ""]
        }
      },
      "response": []
    },
    {
      "name": "Fetch Conversations",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response contains conversations array', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.results).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", ""]
        }
      },
      "response": []
    },
    {
      "name": "Unauthorized Access Test",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 401 for unauthorized access', function () {",
              "    pm.response.to.have.status(401);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", ""]
        }
      },
      "response": []
    },
    {
      "name": "Filter Messages by User",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status code is 200', function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test('Response contains filtered messages', function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.results).to.be.an('array');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{access_token}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/messages/?user=2",
          "host": ["{{base_url}}"],
          "path": ["api", "messages", ""],
          "query": [
            {
              "key": "user",
              "value": "2"
            }
          ]
        }
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000"
    },
    {
      "key": "access_token",
      "value": ""
    },
    {
      "key": "conversation_id",
      "value": ""
    }
  ]
}

name: Django CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y default-libmysqlclient-dev build-essential

    - name: Create virtual environment
      run: python -m venv venv

    - name: Install Python dependencies
      run: |
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage pytest pytest-django

    - name: Create test environment file
      run: |
        cat > .env.test << EOF
        DEBUG=False
        SECRET_KEY=test-secret-key-for-ci-$GITHUB_SHA
        DATABASE_URL=mysql://test_user:test_password@localhost:3306/test_db
        DB_ENGINE=django.db.backends.mysql
        DB_NAME=test_db
        DB_USER=test_user
        DB_PASSWORD=test_password
        DB_HOST=127.0.0.1
        DB_PORT=3306
        EOF
        cat .env.test

    - name: Run database migrations
      run: |
        source venv/bin/activate
        python manage.py makemigrations --noinput
        python manage.py migrate --noinput

    - name: Run Django tests
      run: |
        source venv/bin/activate
        python manage.py test --noinput --verbosity=2

    - name: Run tests with coverage
      run: |
        source venv/bin/activate
        coverage run --source='.' manage.py test --noinput
        coverage report
        coverage xml

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

    - name: Check for missing migrations
      run: |
        source venv/bin/activate
        python manage.py makemigrations --check --dry-run

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Run flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: |
        black --check --diff .

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
